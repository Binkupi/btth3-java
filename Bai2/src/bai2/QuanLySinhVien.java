/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bai2;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.Reader;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author quoct
 */
public class QuanLySinhVien extends javax.swing.JFrame {

    /**
     * Creates new form QuanLySinhVien
     */
    public QuanLySinhVien() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtMSSV = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtBirthday = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbStudent = new javax.swing.JTable();
        btnOpenFile = new javax.swing.JButton();
        btnSaveFile = new javax.swing.JButton();
        btnCancelFile = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin sinh viên"));

        jLabel1.setText("Mã số sinh viên");

        jLabel2.setText("Tên sinh viên");

        jLabel3.setText("Ngày sinh");

        txtMSSV.setEnabled(false);
        txtMSSV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMSSVKeyReleased(evt);
            }
        });

        txtName.setEnabled(false);

        txtBirthday.setEnabled(false);
        txtBirthday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBirthdayActionPerformed(evt);
            }
        });

        jLabel4.setText("(dd/mm/yy)");

        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnSave.setText("Lưu");
        btnSave.setEnabled(false);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnUpdate.setText("Sửa");
        btnUpdate.setEnabled(false);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Xóa");
        btnDelete.setEnabled(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(txtName)
                    .addComponent(txtBirthday)
                    .addComponent(txtMSSV, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(txtMSSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtBirthday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnSave)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh sách sinh viên"));

        tbStudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã số sinh viên", "Tên sinh viên", "Ngày sinh"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbStudent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbStudentMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbStudent);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(346, 346, 346))
        );

        btnOpenFile.setText("Mở file");
        btnOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenFileActionPerformed(evt);
            }
        });

        btnSaveFile.setText("Lưu file");
        btnSaveFile.setEnabled(false);
        btnSaveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveFileActionPerformed(evt);
            }
        });

        btnCancelFile.setText("Hủy");
        btnCancelFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelFileActionPerformed(evt);
            }
        });

        btnCancel.setText("Thoát");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnOpenFile, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSaveFile, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(btnCancelFile, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOpenFile)
                    .addComponent(btnCancelFile)
                    .addComponent(btnCancel)
                    .addComponent(btnSaveFile))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBirthdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBirthdayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBirthdayActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String isCheck=btnAdd.getText();
        if(isCheck.equals("Thêm")){
            btnAdd.setText("Hủy");
            btnSave.setEnabled(true);
            txtMSSV.setEnabled(true);
            txtName.setEnabled(true);
            txtBirthday.setEnabled(true);
        }else{
            StringBuilder sb = new StringBuilder();
     
           sb.append("Bạn đã hủy thao tác \n");    
          if(sb.length()>0){
               JFrame frame = new JFrame("JOptionPane showMessageDialog example");
            JOptionPane.showMessageDialog(frame,
                sb.toString(),
                "Thông báo",
                JOptionPane.ERROR_MESSAGE);
            btnAdd.setText("Thêm");
            btnSave.setEnabled(false);
            txtBirthday.setText("");
            txtMSSV.setText("");
            txtName.setText("");
            txtMSSV.setEnabled(false);
            txtName.setEnabled(false);
            txtBirthday.setEnabled(false);
          }
        }
        
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRow=tbStudent.getSelectedRow();
        if(selectedRow>=0){
            DefaultTableModel model = (DefaultTableModel) tbStudent.getModel();
            String name=tbStudent.getValueAt(selectedRow,1).toString();
            int response = JOptionPane.showConfirmDialog (null,
                            "Bạn có muốn xóa sinh viên "+name+" không?"
                               ,"Confirm Overwrite",
                            JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (response == JOptionPane.OK_OPTION){
                model.removeRow(selectedRow);
                txtBirthday.setText("");
                txtMSSV.setText("");
                txtName.setText("");
                if(tbStudent.getRowCount()==0){
                    btnSaveFile.setEnabled(false);
                    btnUpdate.setEnabled(false);
                    btnDelete.setEnabled(false);
                }
            }          
        }else{
            JFrame frame = new JFrame("JOptionPane showMessageDialog example");
                          JOptionPane.showMessageDialog(frame,
                              "Bạn vui lòng chọn sinh viên trong danh sách!",
                              "Thông báo",
                              JOptionPane.WARNING_MESSAGE);
        }
                   
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenFileActionPerformed
        JFileChooser fc = new JFileChooser();
        int select = fc.showOpenDialog(this);
        if (select == JFileChooser.APPROVE_OPTION) {
            DefaultTableModel row = (DefaultTableModel) tbStudent.getModel();
            int numberRow=tbStudent.getRowCount();
            row.setRowCount(0);
            tbStudent.clearSelection();
            String filename = fc.getSelectedFile().getName();
            String dir = fc.getCurrentDirectory().toString();
            String filePath = dir+"\\"+filename;

                try {
                    // Đọc dữ liệu từ File với File và FileReader
                    //       File file = new File(filePath);
                    FileReader file = new FileReader(filePath);
                try {
                    readFile(file,filename);
                } catch (IOException ex) {
                    Logger.getLogger(QuanLySinhVien.class.getName()).log(Level.SEVERE, null, ex);
                    
                }
                } catch (FileNotFoundException ex) {
                    
                    Logger.getLogger(QuanLySinhVien.class.getName()).log(Level.SEVERE, null, ex); 
                }   

                btnSaveFile.setEnabled(true);
            }
    }//GEN-LAST:event_btnOpenFileActionPerformed

    private void readFile(FileReader file,String filename) throws FileNotFoundException, IOException{
        
        BufferedReader br = new BufferedReader(file);
        String mssv="", name="", birthday="";
        int i=0;
        String line = br.readLine();
        int status=0;
        while(line!=null){
               if(i==0){
                    mssv=line.toString();  
                    i++;
                    status=1;
                    
                }else if(i==1){
                     name=line.toString();
                     i++;
                     status=2;
                }else{
                    birthday=line.toString();
                    Object[] row = { mssv, name, birthday };
                    DefaultTableModel model = (DefaultTableModel) tbStudent.getModel();
                    model.addRow(row);
                    i=0;
                    status=0;
                }
               line = br.readLine();              
        }
        if(status==1){
            Object[] row = { mssv,"","" };
            DefaultTableModel model = (DefaultTableModel) tbStudent.getModel();
            model.addRow(row);
        }else if(status==2){
            Object[] row = { mssv,name,"" };
            DefaultTableModel model = (DefaultTableModel) tbStudent.getModel();
            model.addRow(row);
        }
        JFrame frame = new JFrame("JOptionPane showMessageDialog example");
        JOptionPane.showMessageDialog(frame,
        "Mở file "+filename+"Thành công!!!");
        
        br.close();
        file.close();

    }
    
    private void txtMSSVKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMSSVKeyReleased

    }//GEN-LAST:event_txtMSSVKeyReleased
    //Hàm kiểm tra định dạng ngày sinh
    private boolean isValidDate(String date){
        boolean result=true;
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yy");
        dateFormat.setLenient(false);
        try{
            Date d = dateFormat.parse(date);
            // string contains valid date
            }
        catch (ParseException ex)            {
            // string contains invalid date
            result=false;
            }
        return result;
    }

//Button lưu thông tin sinh viên
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String mssv= txtMSSV.getText();
        String name=txtName.getText();
        String birthday=txtBirthday.getText();
        
        StringBuilder sb = new StringBuilder();
        
        if(name.equals("")||mssv.equals("")||birthday.equals("")){
            sb.append("mã số sinh viên,tên,ngày sinh không được để trống \n");
        } 
        if(sb.length()>0){
             JFrame frame = new JFrame("JOptionPane showMessageDialog example");
          JOptionPane.showMessageDialog(frame,
              sb.toString(),
              "Thông báo",
              JOptionPane.ERROR_MESSAGE);
        }else{
            
            Object[] row = { mssv, name, birthday };
            DefaultTableModel model = (DefaultTableModel) tbStudent.getModel();
            int numberRow=tbStudent.getRowCount();
            String saveMSSV;
            boolean result=true;
            for(int i=0;i<numberRow;i++){
                saveMSSV=tbStudent.getValueAt(i,0).toString();
                if(mssv.equals(saveMSSV)){

                        sb.append("mã số sinh viên "+mssv+" này đã tồn tại. Bạn vui lòng nhập lại MSSV khác nhé \n");  
                     if(sb.length()>0){
                          JFrame frame = new JFrame("JOptionPane showMessageDialog example");
                       JOptionPane.showMessageDialog(frame,
                           sb.toString(),
                           "Thông báo",
                           JOptionPane.WARNING_MESSAGE);
                       result=false;
                       break;
                   }
                }
            }
            //Kiểm tra ngày sinh có đúng địng dạng không
            if(isValidDate(birthday)==false){
                StringBuilder stringBuilder = new StringBuilder();
                stringBuilder.append("Ngày sinh không đúng định dạng \n");  
                if(stringBuilder.length()>0){
                     JFrame frame = new JFrame("JOptionPane showMessageDialog example");
                  JOptionPane.showMessageDialog(frame,
                      stringBuilder.toString(),
                      "Thông báo",
                      JOptionPane.ERROR_MESSAGE);
                  result=false;
                }
            }
            if(result){
                model.addRow(row);
                btnAdd.setText("Thêm");
                btnSave.setEnabled(false);
                txtBirthday.setText("");
                txtMSSV.setText("");
                txtName.setText("");
                txtMSSV.setEnabled(false);
                txtName.setEnabled(false);
                txtBirthday.setEnabled(false);
                btnSaveFile.setEnabled(true);
            }                   
            
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void tbStudentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbStudentMouseClicked
       btnDelete.setEnabled(true);
       btnUpdate.setEnabled(true);
       int selectedRow=tbStudent.getSelectedRow();
 //     DefaultTableModel model = (DefaultTableModel) tbStudent.getModel(selectedRow);
        btnUpdate.setEnabled(true);
        btnDelete.setEnabled(true);
        txtMSSV.setEnabled(true);
        txtName.setEnabled(true);
        txtBirthday.setEnabled(true);
       txtMSSV.setText(tbStudent.getValueAt(selectedRow,0).toString());
       txtName.setText(tbStudent.getValueAt(selectedRow,1).toString());
       txtBirthday.setText(tbStudent.getValueAt(selectedRow,2).toString());
    }//GEN-LAST:event_tbStudentMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        String mssv= txtMSSV.getText();
        String name=txtName.getText();
        String birthday=txtBirthday.getText();
        StringBuilder sb = new StringBuilder();
        int selectedRow=tbStudent.getSelectedRow();
        System.out.print(selectedRow);
        if(selectedRow>=0){
            if(name.equals("")||mssv.equals("")||birthday.equals("")){
                sb.append("mã số sinh viên,tên,ngày sinh không được để trống \n");
            } 
            if(sb.length()>0){
                 JFrame frame = new JFrame("JOptionPane showMessageDialog example");
              JOptionPane.showMessageDialog(frame,
                  sb.toString(),
                  "Thông báo",
                  JOptionPane.ERROR_MESSAGE);
            }else{
                int numberRow=tbStudent.getRowCount();

                String saveMSSV;
                boolean result=true;
                for(int i=0;i<numberRow;i++){
                    saveMSSV=tbStudent.getValueAt(i,0).toString();
                    if(i==selectedRow){
                        continue;
                    }else{
                        if(mssv.equals(saveMSSV)){
                            sb.append("mã số sinh viên "+mssv+"+này đã tồn tại. Bạn vui lòng nhập lại MSSV khác nhé \n");  
                            if(sb.length()>0){
                                 JFrame frame = new JFrame("JOptionPane showMessageDialog example");
                              JOptionPane.showMessageDialog(frame,
                                  sb.toString(),
                                  "Thông báo",
                                  JOptionPane.ERROR_MESSAGE);
                              result=false;
                              break;
                            }
                        }
                    }  
                }
                if(isValidDate(birthday)==false){
                        StringBuilder stringBuilder = new StringBuilder();
                        stringBuilder.append("Ngày sinh không đúng định dạng \n");  
                        if(stringBuilder.length()>0){
                             JFrame frame = new JFrame("JOptionPane showMessageDialog example");
                          JOptionPane.showMessageDialog(frame,
                              stringBuilder.toString(),
                              "Thông báo",
                              JOptionPane.ERROR_MESSAGE);
                          result=false;
                        }
                    }
                if(result){
                    Object[] row = { mssv, name, birthday };
                    DefaultTableModel model = (DefaultTableModel) tbStudent.getModel();
                    model.setValueAt(mssv,selectedRow,0);
                    model.setValueAt(name,selectedRow,1);
                    model.setValueAt(birthday,selectedRow,2);
                    btnAdd.setText("Thêm");
                    btnSave.setEnabled(false);
                    txtBirthday.setText("");
                    txtMSSV.setText("");
                    txtName.setText("");
                    txtMSSV.setEnabled(false);
                    txtName.setEnabled(false);
                    txtBirthday.setEnabled(false);
                    tbStudent.clearSelection();
                }   
            }
        }else{
            StringBuilder stringBuilder = new StringBuilder();
                        stringBuilder.append("Bạn vui lòng chọn sinh viên trong danh sách \n");  
                        if(stringBuilder.length()>0){
                             JFrame frame = new JFrame("JOptionPane showMessageDialog example");
                          JOptionPane.showMessageDialog(frame,
                              stringBuilder.toString(),
                              "Thông báo",
                              JOptionPane.WARNING_MESSAGE);
                        }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSaveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveFileActionPerformed
        JFileChooser fc = new JFileChooser();
        int select = fc.showSaveDialog(null);
        if (select == JFileChooser.APPROVE_OPTION) {
        String filename = fc.getSelectedFile().getName();
        String dir = fc.getCurrentDirectory().toString();
        String filePath = dir+"\\"+filename;
            try {
                File selectedFile=fc.getSelectedFile();
                boolean isCheckedFile=selectedFile.exists();
                FileWriter file = new FileWriter(filePath);
                writerFile(file,isCheckedFile,filename);
            } catch (IOException ex) {
                Logger.getLogger(QuanLySinhVien.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
      
       
    }//GEN-LAST:event_btnSaveFileActionPerformed

    private void btnCancelFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelFileActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed
    
    private void writerFile (FileWriter file,boolean isCheckedFile,String filename) throws FileNotFoundException, IOException{
       BufferedWriter bw = new BufferedWriter(file);
       StringBuilder sb = new StringBuilder();
        if(isCheckedFile){
            int response = JOptionPane.showConfirmDialog (null,
                        "File "+filename+" tồn tại. Bạn có muốn ghi đè lên không?"
                           ,"Confirm Overwrite",
                        JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (response == JOptionPane.OK_OPTION){
                int numberRow=tbStudent.getRowCount();
                int count;
                String replaceString="";
                for(int i=0;i<numberRow;i++){
                    count=0;
                    while(count<=2)
                    {
                        replaceString=tbStudent.getValueAt(i,count).toString();
                        bw.write(replaceString);
                        bw.write("\n");
                        count++;
                    }                    
                }
                
                
                sb.append("File "+filename+ " đã được lưu \n");                
            }             
        }else{
            
            int numberRow=tbStudent.getRowCount();
            int count;
            String replaceString="";
            for(int i=0;i<numberRow;i++){
                count=0;
                while(count<=2)
                {
                    replaceString=tbStudent.getValueAt(i,count).toString();
                    bw.write(replaceString);
                    bw.write("\n");
                    count++;
                }
            }  
            sb.append("File "+filename+ " đã được lưu \n"); 
        }
        bw.close(); 
        file.close();
        if(sb.length()>0){
            JFrame frame = new JFrame("JOptionPane showMessageDialog example");
            JOptionPane.showMessageDialog(frame,
            sb.toString()
            );
       }    
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLySinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLySinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLySinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLySinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLySinhVien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnCancelFile;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnOpenFile;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSaveFile;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbStudent;
    private javax.swing.JTextField txtBirthday;
    private javax.swing.JTextField txtMSSV;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
